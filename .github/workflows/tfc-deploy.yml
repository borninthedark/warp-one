name: "TFC Deployment"

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  terraform:
    name: "Terraform CI/CD with Terraform Cloud"
    runs-on: ubuntu-latest
    env:
      TF_CLOUD_ORG: ${{ secrets.TF_CLOUD_ORG }}  
      TF_WORKSPACE: "warp-one"               
      TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}  

    steps:
      - name: "Checkout Repository"
        uses: actions/checkout@v4

      - name: "Setup Terraform"
        uses: hashicorp/setup-terraform@v2
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: "Create Terraform Cloud Workspace if not exists"
        run: |
          curl \
          --header "Authorization: Bearer $TF_API_TOKEN" \
          --header "Content-Type: application/vnd.api+json" \
          --request POST \
          --data '{
            "data": {
              "attributes": {
                "name": "'$TF_WORKSPACE'",
                "organization": "'$TF_CLOUD_ORG'",
                "execution-mode": "remote"
              },
              "type": "workspaces"
            }
          }' \
          https://app.terraform.io/api/v2/organizations/$TF_CLOUD_ORG/workspaces || true

      - name: "Initialize Terraform"
        run: terraform init

      - name: "Terraform Format Check"
        run: terraform fmt -check

      - name: "Terraform Validate"
        run: terraform validate

      - name: "Terraform Plan"
        run: terraform plan -out=tfplan
        env:
          TF_WORKSPACE: ${{ env.TF_WORKSPACE }}

      - name: "Terraform Apply"
        if: github.ref == 'refs/heads/main'
        run: terraform apply -auto-approve tfplan
        env:
          TF_WORKSPACE: ${{ env.TF_WORKSPACE }}
